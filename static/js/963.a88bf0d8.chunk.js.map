{"version":3,"file":"static/js/963.a88bf0d8.chunk.js","mappings":"0KAIMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHe,6BAIfC,QAAS,CAAE,eAAgB,sBAGhBC,EAAU,SAAAC,GACrB,IACE,OAAOL,EAASM,IAAT,WAAiBD,GAGzB,CAFC,MAAOE,GACPC,QAAQC,IAAIF,EACb,CACF,C,kBCbD,IAFgB,kC,4ICkDhB,EA7CkB,WAAO,IAAD,EACtB,GAAwBG,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaV,IAAI,gBAApB,QAAgC,GACrCa,EAAU,iCAA6BC,EAAAA,EAA7B,kBAA8CF,EAA9C,2DAAsGP,GAgBtH,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOW,EAAP,KAAeC,EAAf,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACa,KAAjBL,EAAMM,SAIVpB,EAAAA,EAAAA,GAAQe,GACLM,MAAK,SAAAC,GACJ,MAAuCA,EAASC,KAAxChB,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,YACvBP,GAAU,SAAAQ,GAAS,wBAAQA,IAAR,OAAsBF,GAAtB,IACnBhB,EAAQD,GACJkB,EAAclB,GAChBG,GAAW,EAEd,IACAiB,OAAM,SAAAxB,GACLC,QAAQC,IAAIF,EAAMyB,QACnB,GACJ,GAAE,CAACb,EAAYD,EAAOP,IAEhB,CAACU,EAnCa,SAAAY,GACnBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,cAAcC,SAASC,MAAMC,MAEtD,IAAKJ,EACH,OAAOlB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOiB,GAC1B,EA2B6BtB,EAzBP,WACrBD,GAAQ,SAAA4B,GAAI,OAAIA,EAAO,CAAX,GACb,EAwBF,EC/CD,EAAuB,yBAAvB,EAAyD,2BAAzD,EAA4F,0B,SCgD5F,EA5CmB,WACjB,MAAwDC,IAAxD,eAAOpB,EAAP,KAAeqB,EAAf,KAA6B7B,EAA7B,KAAsC8B,EAAtC,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,kBAAMC,UAAWC,EAAUC,SAAUN,EAArC,WACE,mBAAQI,UAAWC,EAAYE,KAAK,SAApC,UACE,SAAC,MAAD,CAAUC,KAAK,YAGjB,kBACEJ,UAAWC,EACXI,KAAK,QACLF,KAAK,OACLG,aAAa,MACbC,WAAS,EACTC,YAAY,iCAGhB,wBACGjC,EAAOkC,OAAS,GACflC,EAAOmC,KAAI,SAAAC,GACT,IAAQC,EAAsCD,EAAtCC,cAAeC,EAAuBF,EAAvBE,eAAgBC,EAAOH,EAAPG,GACjCC,EAAK,yCAAqCH,GAChD,OACE,yBACE,UAAC,KAAD,CAAMI,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMpB,GAAlC,WACE,gBAAKqB,IAAKJ,EAAOK,IAAKP,KACtB,0BAAOA,QAHFC,EAOZ,MAEJ/C,IACC,mBAAQoC,KAAK,SAASkB,QAASxB,EAA/B,yBAMP,C","sources":["api/defaultApi.js","components/constants.js","hooks/useMovies.js","webpack://react-homework-template/./src/pages/MoviesPage.module.css?f2bc","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: { 'Content-Type': 'application/json' },\n});\n\nexport const getData = url => {\n  try {\n    return instance.get(`/${url}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","const API_KEY = '84a9c85584e90472998fb70b43f15561';\n\nexport default API_KEY;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport API_KEY from 'components/constants';\nimport { getData } from 'api/defaultApi';\n\nconst useMovies = () => {\n  const [page, setPage] = useState(1);\n  const [moreBtn, setMoreBtn] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const MOVIES_URL = `3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false&page=${page}`;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const inputQuery = event.currentTarget.elements.input.value;\n\n    if (!inputQuery) {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: inputQuery });\n  };\n\n  const handleLoadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (query.trim() === '') {\n      return;\n    }\n\n    getData(MOVIES_URL)\n      .then(response => {\n        const { page, results, total_pages } = response.data;\n        setMovies(prevState => [...prevState, ...results]);\n        setPage(page);\n        if (total_pages > page) {\n          setMoreBtn(true);\n        }\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [MOVIES_URL, query, page]);\n\n  return [movies, handleSubmit, moreBtn, handleLoadMore];\n};\n\nexport default useMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__vECho\",\"button\":\"MoviesPage_button__sPqVK\",\"input\":\"MoviesPage_input__zOh2m\"};","import { useLocation, Link } from 'react-router-dom';\nimport { BiSearch } from 'react-icons/bi';\nimport useMovies from 'hooks/useMovies';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, handleSubmit, moreBtn, handleLoadMore] = useMovies();\n  const location = useLocation();\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <button className={css.button} type=\"submit\">\n          <BiSearch size=\"20px\" />\n        </button>\n\n        <input\n          className={css.input}\n          name=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n      <ul>\n        {movies.length > 0 &&\n          movies.map(movie => {\n            const { backdrop_path, original_title, id } = movie;\n            const image = `http://image.tmdb.org/t/p/w300/${backdrop_path}`;\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  <img src={image} alt={original_title}></img>\n                  <span>{original_title}</span>\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n      {moreBtn && (\n        <button type=\"button\" onClick={handleLoadMore}>\n          Load More\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","headers","getData","url","get","error","console","log","useState","page","setPage","moreBtn","setMoreBtn","useSearchParams","searchParams","setSearchParams","query","MOVIES_URL","API_KEY","movies","setMovies","useEffect","trim","then","response","data","results","total_pages","prevState","catch","message","event","preventDefault","inputQuery","currentTarget","elements","input","value","prev","useMovies","handleSubmit","handleLoadMore","location","useLocation","className","css","onSubmit","type","size","name","autoComplete","autoFocus","placeholder","length","map","movie","backdrop_path","original_title","id","image","to","state","from","src","alt","onClick"],"sourceRoot":""}